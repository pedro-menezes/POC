/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package poc.view;

//import java.awt.Dimension;
//import javax.swing.JComponent;
import java.io.File;
import java.io.IOException;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultComboBoxModel;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JMenuBar;
import javax.swing.JOptionPane;
import poc.control.CampeonatoController;
import poc.control.CampoController;
import poc.control.TimeController;
import poc.model.Campeonato;
import poc.model.Campo;
import poc.model.Time;

/**
 *
 * @author Leandro
 */
public class ExcluirTime extends javax.swing.JInternalFrame {

    private Campeonato campeonato;
    private TimeController timeControl;
    private CampoController campoControl;
    private CampeonatoController champControl;
    private Campo campo;
    private Time time;
    private ArrayList<Time> times = new ArrayList<Time>();

    /**
     * Creates new form AdicionarTimee
     */
    public ExcluirTime(Campeonato campeonato) {
        initComponents();
        this.campeonato = campeonato;
        organizarCombo();
        //removeTitleBar();
    }

   public void organizarCombo() {
        DefaultComboBoxModel modeloCombo = new DefaultComboBoxModel();

        times = campeonato.getTimes();

        for (int i = 1; i < 101; i++) {
            if (verificaPrioridades(times, i) == false) {
                modeloCombo.addElement(i);
            }
        }

        comboPrioridade.setModel(modeloCombo);
    }

    public boolean verificaPrioridades(ArrayList<Time> times, int i) {

        for (Time time1 : times) {
            if (time1.getPrioridade() == i) {
                return true;
            }
        }
        return false;
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        seletorArquivos = new javax.swing.JFileChooser();
        labelNome = new javax.swing.JLabel();
        labelAbreviacao = new javax.swing.JLabel();
        labelPrioridade = new javax.swing.JLabel();
        buttonAddOutro = new javax.swing.JButton();
        buttonConfirmar = new javax.swing.JButton();
        butttonCancelar = new javax.swing.JButton();
        textNome = new javax.swing.JTextField();
        textAbreviacao = new javax.swing.JTextField();
        comboPrioridade = new javax.swing.JComboBox<>();
        labelEscudo = new javax.swing.JLabel();
        buttonEscudo = new javax.swing.JButton();
        labelCampo = new javax.swing.JLabel();
        textCampo = new javax.swing.JTextField();
        labelNome1 = new javax.swing.JLabel();

        setClosable(true);
        setTitle("Excluir Time");
        setToolTipText("");
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        setDoubleBuffered(true);
        setFrameIcon(new javax.swing.ImageIcon(getClass().getResource("/poc/view/icons/excluirTime.png"))); // NOI18N

        labelNome.setText("Nome");

        labelAbreviacao.setText("Abreviação");

        labelPrioridade.setText("Prioridade");

        buttonAddOutro.setText("Confirmar e Adicionar Outro");
        buttonAddOutro.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonAddOutroActionPerformed(evt);
            }
        });

        buttonConfirmar.setText("Confirmar");
        buttonConfirmar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonConfirmarActionPerformed(evt);
            }
        });

        butttonCancelar.setText("Cancelar");
        butttonCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                butttonCancelarActionPerformed(evt);
            }
        });

        comboPrioridade.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] {}));

        labelEscudo.setText("Escudo");

        buttonEscudo.setText("Importar...");
        buttonEscudo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonEscudoActionPerformed(evt);
            }
        });

        labelCampo.setText("Campo:");

        labelNome1.setText("Nome");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(labelNome1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(comboPrioridade, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(butttonCancelar)
                        .addGap(18, 18, 18)
                        .addComponent(buttonConfirmar)
                        .addGap(18, 18, 18)
                        .addComponent(buttonAddOutro))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(labelAbreviacao)
                            .addComponent(labelNome))
                        .addGap(7, 7, 7)
                        .addComponent(textAbreviacao))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(labelPrioridade)
                            .addComponent(labelEscudo)
                            .addComponent(labelCampo))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(13, 13, 13)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(buttonEscudo)
                                        .addGap(0, 0, Short.MAX_VALUE))
                                    .addComponent(textCampo)))
                            .addGroup(layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(textNome)))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(comboPrioridade, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(labelNome1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(labelNome)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelAbreviacao)
                    .addComponent(textAbreviacao, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelPrioridade)
                    .addComponent(textNome, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(9, 9, 9)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelEscudo)
                    .addComponent(buttonEscudo))
                .addGap(9, 9, 9)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelCampo)
                    .addComponent(textCampo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 38, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(buttonAddOutro)
                    .addComponent(buttonConfirmar)
                    .addComponent(butttonCancelar))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void butttonCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_butttonCancelarActionPerformed
        // TODO add your handling code here:
        this.dispose();
    }//GEN-LAST:event_butttonCancelarActionPerformed

    private void buttonEscudoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonEscudoActionPerformed
        abrirSeletorArquivos();
    }//GEN-LAST:event_buttonEscudoActionPerformed

    private void buttonConfirmarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonConfirmarActionPerformed
        // TODO add your handling code here:
        campoControl = new CampoController();
        campo = new Campo(1, textCampo.getText());
        champControl = new CampeonatoController();
        timeControl = new TimeController();

        int codigo = campeonato.getTimes().size() + 1;
        int selecionado = Integer.parseInt(comboPrioridade.getSelectedItem().toString());

        time = new Time(codigo, textNome.getText(), selecionado, null, campo, textAbreviacao.getText());

        if (timeControl.verificarCadastro(time, campeonato) == false) {
            JOptionPane.showMessageDialog(null, "Time já cadastrado!", "Erro de Cadastro", JOptionPane.ERROR_MESSAGE);
        } else {
            champControl.cadastrarTime(time, campeonato);
            times = campeonato.getTimes();
            JOptionPane.showMessageDialog(null, "Cadastrado com sucesso!", "Cadastro", JOptionPane.INFORMATION_MESSAGE);
        }

        this.dispose();
    }//GEN-LAST:event_buttonConfirmarActionPerformed

    private void buttonAddOutroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonAddOutroActionPerformed
        // TODO add your handling code here:
        campoControl = new CampoController();
        campo = new Campo(1, textCampo.getText());
        champControl = new CampeonatoController();
        timeControl = new TimeController();

        int codigo = campeonato.getTimes().size() + 1;
        int selecionado = Integer.parseInt(comboPrioridade.getSelectedItem().toString());

        time = new Time(codigo, textNome.getText(), selecionado, null, campo, textAbreviacao.getText());

        if (timeControl.verificarCadastro(time, campeonato) == false) {
            JOptionPane.showMessageDialog(null, "Time já cadastrado!", "Erro de Cadastro", JOptionPane.ERROR_MESSAGE);

        } else {
            champControl.cadastrarTime(time, campeonato);
            times = campeonato.getTimes();

            JOptionPane.showMessageDialog(null, "Cadastrado com sucesso!", "Cadastro", JOptionPane.INFORMATION_MESSAGE);
        }

        System.out.println("Lista de Cadastrados");
        for (Time time1 : times) {
            System.out.println(time1.getNome());
        }
        
        organizarCombo();
        /* if (campoControl.verificar(textCampo.getText(), champControl) == true) {
            campo = campoControl.cadastrar(textCampo.getText());
            if (timeControl.verificar(textNome.getText()) == true) {
                time = new Time(0, textNome.getText(), comboPrioridade.getItemCount(), null, campo, textAbreviacao.getText());
                int cont = champControl.tamanhoArray();
                times[cont + 1] = time;
                champControl.addTime(times);
            }
        } else if (campoControl.verificar(textCampo.getText(), champControl) == false) {

        }*/

    }//GEN-LAST:event_buttonAddOutroActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton buttonAddOutro;
    private javax.swing.JButton buttonConfirmar;
    private javax.swing.JButton buttonEscudo;
    private javax.swing.JButton butttonCancelar;
    private javax.swing.JComboBox<String> comboPrioridade;
    private javax.swing.JLabel labelAbreviacao;
    private javax.swing.JLabel labelCampo;
    private javax.swing.JLabel labelEscudo;
    private javax.swing.JLabel labelNome;
    private javax.swing.JLabel labelNome1;
    private javax.swing.JLabel labelPrioridade;
    private javax.swing.JFileChooser seletorArquivos;
    private javax.swing.JTextField textAbreviacao;
    private javax.swing.JTextField textCampo;
    private javax.swing.JTextField textNome;
    // End of variables declaration//GEN-END:variables

    private void abrirSeletorArquivos() {
        int returnVal = seletorArquivos.showOpenDialog(this);
        if (returnVal == JFileChooser.APPROVE_OPTION) {
            File file = seletorArquivos.getSelectedFile();
            System.out.println("CERTO");
        } else {
            System.out.println("File access cancelled by user.");
        }
    }
}
